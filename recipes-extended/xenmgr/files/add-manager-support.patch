From 9d15e14ef99c43268fcd98b1a5f6069ce2330b62 Mon Sep 17 00:00:00 2001
From: mogrenp <mogrenp@ainfosec.com>
Date: Mon, 9 Jan 2017 12:29:20 -0500
Subject: [PATCH 1/4] Fix typo bug when specifying disk backend uuid

---
 xenmgr/XenMgr/Expose/VmDiskObject.hs | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/xenmgr/XenMgr/Expose/VmDiskObject.hs b/xenmgr/XenMgr/Expose/VmDiskObject.hs
index 4607d59..2ccd55c 100644
--- a/xenmgr/XenMgr/Expose/VmDiskObject.hs
+++ b/xenmgr/XenMgr/Expose/VmDiskObject.hs
@@ -121,9 +121,10 @@ _GetBackendUuid :: ID -> Rpc String
 _GetBackendUuid _ = return ""
 
 _SetBackendUuid :: ID -> String -> Vm ()
-_SetBackendUuid _ _ =
-    error "not implemented"
 
+_SetBackendUuid id uuid = _modify_disk id $ \d -> d { diskBackendUuid = case uuid of
+                                                                           "" -> Nothing
+                                                                           _  -> Just (fromString uuid) }
 _GetBackendName :: ID -> Rpc String
 _GetBackendName _ = return ""
 
-- 
2.7.4


From d43469cfd144eaa2d9457c132e0fcbb36bdcc3b2 Mon Sep 17 00:00:00 2001
From: mogrenp <mogrenp@ainfosec.com>
Date: Thu, 5 Jan 2017 17:18:40 -0500
Subject: [PATCH 2/4] Add support to allow specifying a disk backend

---
 xenmgr/Vm/Queries.hs | 61 +++++++++++++++++++++++++++++++++++++++++++++++++---
 1 file changed, 58 insertions(+), 3 deletions(-)

diff --git a/xenmgr/Vm/Queries.hs b/xenmgr/Vm/Queries.hs
index 825dfd4..91f8f47 100644
--- a/xenmgr/Vm/Queries.hs
+++ b/xenmgr/Vm/Queries.hs
@@ -88,7 +88,7 @@ module Vm.Queries
                , getVmShutdownPriority, getVmProvidesGraphicsFallback
                , getVmSeamlessId, getVmStartFromSuspendImage
                , getVmQemuDmPath, getVmQemuDmTimeout
-               , getVmDependencies
+               , getVmNetworkDependencies, getVmDiskDependencies, getVmDependencies, getVmDiskBackendUuid
                , getVmTrackDependencies
                , getVmSeamlessMouseLeft, getVmSeamlessMouseRight
                , getVmOs, getVmControlPlatformPowerState, getVmGreedyPcibackBind
@@ -386,8 +386,63 @@ getVmSmbiosOemTypesPt uuid = getVmSmbiosPt uuid >>= go where
     from_manufacturer DELL       = [ 129, 130, 131, 177 ]
     from_manufacturer _          = [ 129, 130, 131 ]
 
-getDependencyGraph :: Rpc (DepGraph Uuid)
-getDependencyGraph =
+getDefaultDiskBackendVm :: Rpc (Maybe Uuid)
+getDefaultDiskBackendVm = do
+  vms <- getVmsBy getVmProvidesDefaultDiskBackend
+  case vms of
+     (uuid:_) -> return $ Just uuid
+     _        -> return Nothing
+
+getVmDiskBackendUuid :: Uuid -> Disk -> Rpc (Maybe Uuid)
+getVmDiskBackendUuid uuid disk = do
+   default_backend <- liftRpc getDefaultDiskBackendVm
+   case (diskBackendUuid disk, diskBackendName disk) of
+      (Nothing  , Nothing)   -> if uuid == (fromMaybe domain0uuid default_backend) then return Nothing else return default_backend
+      (Just uuid, _      )   -> return $ Just uuid
+      (Nothing  , Just name) ->
+         do vms <- getVmsBy (\vm -> (== name) <$> getVmName vm)
+            case vms of
+               (uuid:_) -> return $ Just uuid
+               _        -> if uuid == (fromMaybe domain0uuid default_backend) then return Nothing else return default_backend
+
+getDiskDependencyGraph :: Rpc (DepGraph Uuid)
+getDiskDependencyGraph =
+    do vms <- getVms
+       edges <- concat <$> mapM edge vms
+       return $ depgraphFromEdges edges
+    where
+      edge uuid =
+          do disks <- M.elems <$> getDisks uuid
+             backends <- nub . catMaybes <$> mapM (getVmDiskBackendUuid uuid) disks
+             return $ map (\dep -> (uuid,dep)) backends
+
+getVmDiskDependencies :: Uuid -> Rpc [Uuid]
+getVmDiskDependencies uuid =
+    do graph <- getDiskDependencyGraph
+       case dependencies uuid graph of
+         Nothing -> error "errors in disk dependency graph; check for cycles"
+         Just xs -> return xs
+
+getNetworkDependencyGraph :: Rpc (DepGraph Uuid)
+getNetworkDependencyGraph =
+    do vms <- getVms
+       edges <- concat <$> mapM edge vms
+       return $ depgraphFromEdges edges
+    where
+      edge uuid =
+          do nics <- getVmNicDefs' uuid
+             backends <- nub . catMaybes <$> mapM getVmNicBackendUuid nics
+             return $ map (\dep -> (uuid,dep)) backends
+
+getVmNetworkDependencies :: Uuid -> Rpc [Uuid]
+getVmNetworkDependencies uuid =
+    do graph <- getNetworkDependencyGraph
+       case dependencies uuid graph of
+         Nothing -> error "errors in network dependency graph; check for cycles"
+         Just xs -> return xs
+
+getFullDependencyGraph :: Rpc (DepGraph Uuid)
+getFullDependencyGraph =
     do vms <- getVms
        edges <- concat <$> mapM edge vms
        return $ depgraphFromEdges edges
-- 
2.7.4


From dc51e48ca1002cb40328de24ec18fb1d085f1515 Mon Sep 17 00:00:00 2001
From: mogrenp <mogrenp@ainfosec.com>
Date: Wed, 4 Jan 2017 14:27:21 -0500
Subject: [PATCH 3/4] Remove reoccurring storage check when using a storage
 domain

---
 xenmgr/Main.hs | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/xenmgr/Main.hs b/xenmgr/Main.hs
index a79f64b..c5d1f52 100644
--- a/xenmgr/Main.hs
+++ b/xenmgr/Main.hs
@@ -245,7 +245,7 @@ periodics xm_context rpccontext =
         ]
 
     checkStorage = do
-      rpc rpccontext hostCheckFreeStorage
+      --rpc rpccontext hostCheckFreeStorage
       return ()
 
 hostMonitorIdleness :: XmContext -> Rpc ()
-- 
2.7.4


From 3f2964875cd16c8982ee26ca5ac8763a46143879 Mon Sep 17 00:00:00 2001
From: mogrenp <mogrenp@ainfosec.com>
Date: Thu, 1 Dec 2016 10:10:46 -0500
Subject: [PATCH 4/4] Add storage-domain support to xenmgr

---
 xenmgr/Vm/Actions.hs                 | 71 ++++++++++++++++++++++++++++++------
 xenmgr/Vm/Config.hs                  | 24 +++++++++---
 xenmgr/Vm/DmTypes.hs                 |  3 ++
 xenmgr/Vm/Queries.hs                 | 39 +++++++++++++++++---
 xenmgr/XenMgr/Expose/VmDiskObject.hs | 10 ++---
 xenmgr/XenMgr/Expose/VmObject.hs     | 10 +++++
 6 files changed, 129 insertions(+), 28 deletions(-)

diff --git a/xenmgr/Vm/Actions.hs b/xenmgr/Vm/Actions.hs
index 61a8228..f004d0b 100644
--- a/xenmgr/Vm/Actions.hs
+++ b/xenmgr/Vm/Actions.hs
@@ -80,7 +80,7 @@ module Vm.Actions
           , setVmVideoram, setVmPassthroughMmio, setVmPassthroughIo, setVmFlaskLabel
           , setVmAmtPt, setVmHap, setVmSmbiosPt, setVmDescription
           , setVmExtraXenvm, setVmExtraHvm
-          , setVmStartOnBootPriority, setVmKeepAlive, setVmProvidesNetworkBackend
+          , setVmStartOnBootPriority, setVmKeepAlive, setVmProvidesNetworkBackend, setVmProvidesDiskBackend 
           , setVmProvidesGraphicsFallback, setVmShutdownPriority, setVmSeamlessId
           , setVmStartFromSuspendImage, setVmQemuDmPath, setVmQemuDmTimeout, setVmTrackDependencies
           , setVmSeamlessMouseLeft, setVmSeamlessMouseRight, setVmOs, setVmControlPlatformPowerState
@@ -103,6 +103,7 @@ module Vm.Actions
           , setVmDownloadProgress
           , setVmReady
           , setVmProvidesDefaultNetworkBackend
+          , setVmProvidesDefaultDiskBackend
           , setVmVkbd
           , setVmVfb
           , setVmV4V
@@ -582,25 +583,54 @@ startupMeasureVm uuid
 
 startupDependencies :: Uuid -> XM Bool
 startupDependencies uuid
-  = do deps <- liftRpc $ getVmTrackDependencies uuid
-       if deps
+  = do startDiskDependencies uuid
+       checkDiskDependencies uuid
+       net_deps <- liftRpc $ getVmTrackDependencies uuid
+       if net_deps
          then do
-           startDependencies uuid
-           checkDependencies uuid
+           startNetworkDependencies uuid
+           checkNetworkDependencies uuid
          else do
            return True
   where
-    checkDependencies uuid = liftRpc $ do
-        missing <- filterM (fmap not . isRunning) =<< (getVmDependencies uuid)
-        if (null missing)
+    startDiskDependencies uuid =
+        do dependentVms <- liftRpc $ getVmDiskDependencies uuid
+           unless (null dependentVms) $ 
+                info $ "vm disk dependencies: " ++ show dependentVms
+           mapM_ startVm =<< (liftRpc $ filterM (fmap not .isRunning) dependentVms)
+
+    checkDiskDependencies uuid = do
+       dependentVms <- liftRpc $ getVmDiskDependencies uuid
+       if (null dependentVms)
+          then return True
+          else do
+             missing <- filterM (fmap not . isRunning) dependentVms
+             when (null missing) $ warn ("missing disk dependencies: " ++ show missing)
+             running <- filterM isRunning dependentVms
+             mapM waitForDiskDependencies running
+             return True
+ 
+    waitForDiskDependencies uuid = do
+       domid <- fromMaybe (-1) <$> getDomainID uuid
+       ready <- liftIO $ xsRead ("/local/domain/" ++ show domid ++ "/device/storage-ready")
+       case fromMaybe "-1" ready of
+          "1" -> return True
+          "0" -> do liftIO (threadDelay $ 10^6)
+                    waitForDiskDependencies uuid
+          _   -> do error ("Cannot find appropriate xenstore value for disk backend: " ++ show uuid)
+                    return False
+
+    checkNetworkDependencies uuid = liftRpc $ do
+       missing <- filterM (fmap not . isRunning) =<< (getVmNetworkDependencies uuid)
+       if (null missing)
             then do return True
-            else do warn $ "missing dependencies: " ++ show missing
+            else do warn $ "missing network dependencies: " ++ show missing
                     return False
 
-    startDependencies uuid =
-        do dependentVms <- liftRpc $ getVmDependencies uuid
+    startNetworkDependencies uuid =
+        do dependentVms <- liftRpc $ getVmNetworkDependencies uuid
            unless (null dependentVms) $
-                info $ "vm dependencies: " ++ show dependentVms
+                info $ "vm network dependencies: " ++ show dependentVms
            mapM_ startVm =<< (liftRpc $ filterM (fmap not . isRunning) dependentVms)
 
 startupExtractKernel :: Uuid -> XM Bool
@@ -804,6 +834,12 @@ bootVm config
           twiddlePermissions uuid
           exportVmSwitcherInfo uuid
           setupCDDrives uuid
+
+          gives_storage <- getVmProvidesDiskBackend uuid
+          when gives_storage $ whenDomainID_ uuid $ \domid -> do
+            liftIO $ xsWrite (domainXSPath domid ++ "/device/storage-ready") "0"
+            liftIO $ xsChmod (domainXSPath domid ++ "/device/storage-ready") ("b" ++ show domid ++ ",r0")
+
           -- some little network plumbing
           gives_network <- getVmProvidesNetworkBackend uuid
           when gives_network $ whenDomainID_ uuid $ \domid -> do
@@ -1242,6 +1278,9 @@ addDefaultDiskToVm uuid =
                      , diskManagedType = UnmanagedDisk
                      , diskShared = False
                      , diskEnabled = True
+                     , diskBackendName = Nothing
+                     , diskBackendUuid = Nothing
+                     , diskBackendDomid = Nothing
                      }
 
 --
@@ -1259,6 +1298,9 @@ addVhdDiskToVm uuid path = do
                , diskManagedType = UnmanagedDisk
                , diskShared = False
                , diskEnabled = True
+               , diskBackendName = Nothing
+               , diskBackendUuid = Nothing
+               , diskBackendDomid = Nothing
                }
     addDiskToVm uuid disk
 
@@ -1277,6 +1319,9 @@ addPhyDiskToVm uuid path = do
                , diskManagedType = UnmanagedDisk
                , diskShared = False
                , diskEnabled = True
+               , diskBackendName = Nothing
+               , diskBackendUuid = Nothing
+               , diskBackendDomid = Nothing
                }
     addDiskToVm uuid disk
 
@@ -1701,6 +1746,8 @@ setVmSmbiosPt uuid v = saveConfigProperty uuid vmSmbiosPt (v::Bool)
 setVmDescription uuid v = saveConfigProperty uuid vmDescription (v::String)
 setVmStartOnBootPriority uuid v = saveConfigProperty uuid vmStartOnBootPriority (v::Int)
 setVmKeepAlive uuid v = saveConfigProperty uuid vmKeepAlive (v::Bool)
+setVmProvidesDiskBackend uuid v = saveConfigProperty uuid vmProvidesDiskBackend (v::Bool)
+setVmProvidesDefaultDiskBackend uuid v = saveConfigProperty uuid vmProvidesDefaultDiskBackend (v::Bool)
 setVmProvidesNetworkBackend uuid v = saveConfigProperty uuid vmProvidesNetworkBackend (v::Bool)
 setVmProvidesDefaultNetworkBackend uuid v = saveConfigProperty uuid vmProvidesDefaultNetworkBackend (v::Bool)
 setVmProvidesGraphicsFallback uuid v = saveConfigProperty uuid vmProvidesGraphicsFallback (v::Bool)
diff --git a/xenmgr/Vm/Config.hs b/xenmgr/Vm/Config.hs
index 763214a..370760d 100644
--- a/xenmgr/Vm/Config.hs
+++ b/xenmgr/Vm/Config.hs
@@ -38,7 +38,7 @@ module Vm.Config (
 
                   -- list of interesting config properties
                 , vmUuidP, vmName, vmDescription, vmType, vmSlot, vmImagePath, vmPvAddons, vmPvAddonsVersion
-                , vmStartOnBoot, vmStartOnBootPriority, vmKeepAlive, vmProvidesNetworkBackend, vmTimeOffset
+                , vmStartOnBoot, vmStartOnBootPriority, vmKeepAlive, vmProvidesNetworkBackend, vmProvidesDiskBackend, vmTimeOffset
                 , vmAmtPt, vmCryptoUser, vmCryptoKeyDirs, vmStartup
                 , vmNotify, vmHvm, vmPae, vmAcpi, vmApic, vmViridian, vmNx, vmSound, vmMemory, vmHap, vmSmbiosPt
                 , vmDisplay, vmBoot, vmCmdLine, vmKernel, vmInitrd, vmAcpiPt, vmVcpus, vmGpu
@@ -71,6 +71,7 @@ module Vm.Config (
                 , vmIcbinnPath
                 , vmOvfTransportIso
                 , vmReady
+                , vmProvidesDefaultDiskBackend
                 , vmProvidesDefaultNetworkBackend
                 , vmRestrictDisplayDepth
                 , vmRestrictDisplayRes
@@ -214,6 +215,8 @@ instance Marshall Disk where
                   sha1Sum <- dbRead (x ++ "/sha1sum" )
                   shared  <- dbReadWithDefault False (x ++ "/shared")
                   enable  <- dbReadWithDefault True (x ++ "/enable")
+                  bname   <- dbRead (x ++ "/backend-name")
+                  uuid    <- dbRead (x ++ "/backend-uuid")
                   return $
                          Disk { diskPath         = path
                               , diskType         = typ
@@ -225,6 +228,9 @@ instance Marshall Disk where
                               , diskShared       = shared
                               , diskManagedType  = mtyp
                               , diskEnabled      = enable
+                              , diskBackendName  = bname
+                              , diskBackendUuid  = uuid
+                              , diskBackendDomid = Nothing
                               }
     dbWrite x v = do current <- dbRead x
                      dbWrite (x ++ "/path"    ) (diskPath         v)
@@ -239,6 +245,8 @@ instance Marshall Disk where
                      dbWrite (x ++ "/shared" ) (diskShared v)
                      when (diskEnabled v /= diskEnabled current) $ 
                        dbWrite (x ++ "/enable") (diskEnabled v)
+                     dbWrite (x ++ "/backend-name") (diskBackendName v)
+                     dbWrite (x ++ "/backend-uuid") (diskBackendUuid v)
 
 -- NIC definition can be marshalled
 instance Marshall NicDef where
@@ -345,6 +353,8 @@ vmStartOnBootPriority = property "start_on_boot_priority"
 vmStartFromSuspendImage = property "start-from-suspend-image"
 vmShutdownPriority = property "shutdown-priority"
 vmKeepAlive = property "keep-alive"
+vmProvidesDiskBackend = property "provides-disk-backend"
+vmProvidesDefaultDiskBackend = property "provides-default-disk-backend"
 vmProvidesNetworkBackend = property "provides-network-backend"
 vmProvidesDefaultNetworkBackend = property "provides-default-network-backend"
 vmProvidesGraphicsFallback = property "provides-graphics-fallback"
@@ -564,9 +574,11 @@ validDisks = filterM isDiskValid . allDisks
 
 isDiskValid :: Disk -> Rpc Bool
 isDiskValid disk =
-    case diskType disk of
-      VirtualHardDisk -> liftIO . doesFileExist $ diskPath disk
-      _               -> return True
+  case diskBackendDomid disk of
+     Nothing -> case diskType disk of
+                   VirtualHardDisk -> liftIO . doesFileExist $ diskPath disk
+                   _               -> return True
+     _       -> return True
 
 diskSpecs :: VmConfig -> Rpc [DiskSpec]
 diskSpecs cfg = mapM (diskSpec uuid crypto_dirs) =<< disks where
@@ -577,9 +589,9 @@ diskSpecs cfg = mapM (diskSpec uuid crypto_dirs) =<< disks where
 diskSpec :: Uuid -> [FilePath] -> Disk -> Rpc DiskSpec
 diskSpec uuid crypto_dirs d  = do
   let crypto = cryptoSpec uuid crypto_dirs d
-  return $ "disk=" ++ printf "%s:%s:%s:%s:%s:%s:%s"
+  return $ "disk=" ++ printf "%s:%s:%s:%s:%s:%s:backend=%d:%s"
              (diskPath d) (enumMarshall $ diskType d) (diskDevice d) (enumMarshall $ diskMode d)
-             (enumMarshall $ diskDeviceType d) snapshot crypto
+             (enumMarshall $ diskDeviceType d) snapshot (fromMaybe 0 (diskBackendDomid d)) crypto
       where snapshot = maybe "" enumMarshall (diskSnapshotMode d)
 
 -- Next section: information about Network Interfaces
diff --git a/xenmgr/Vm/DmTypes.hs b/xenmgr/Vm/DmTypes.hs
index b6ed0ac..7cd7dad 100644
--- a/xenmgr/Vm/DmTypes.hs
+++ b/xenmgr/Vm/DmTypes.hs
@@ -110,6 +110,9 @@ data Disk = Disk { diskPath :: FilePath
                  , diskShared :: Bool
                  , diskEnabled :: Bool
                  , diskManagedType :: ManagedDiskType
+                 , diskBackendName :: Maybe String
+                 , diskBackendUuid :: Maybe Uuid
+                 , diskBackendDomid :: Maybe DomainID
                  } deriving (Eq, Show)
 
 type Sha1Sum = Integer
diff --git a/xenmgr/Vm/Queries.hs b/xenmgr/Vm/Queries.hs
index 91f8f47..a6ce87c 100644
--- a/xenmgr/Vm/Queries.hs
+++ b/xenmgr/Vm/Queries.hs
@@ -33,6 +33,7 @@ module Vm.Queries
                , getRunningHDX
                , getGraphicsFallbackVm
                , getDefaultNetworkBackendVm
+               , getDefaultDiskBackendVm
                , getConfigCorruptionInfo
                , getNic
                , getVmNicDefs
@@ -84,7 +85,7 @@ module Vm.Queries
                , getVmVideoram, getVmPassthroughMmio, getVmPassthroughIo, getVmFlaskLabel
                , getVmAcpiState, getVmHap, getVmSmbiosPt, getVmDescription, getVmMeasured
                , getVmExtraXenvm, getVmExtraHvm
-               , getVmStartOnBootPriority, getVmKeepAlive, getVmProvidesNetworkBackend
+               , getVmStartOnBootPriority, getVmKeepAlive, getVmProvidesNetworkBackend, getVmProvidesDiskBackend
                , getVmShutdownPriority, getVmProvidesGraphicsFallback
                , getVmSeamlessId, getVmStartFromSuspendImage
                , getVmQemuDmPath, getVmQemuDmTimeout
@@ -109,6 +110,7 @@ module Vm.Queries
                , getVmOvfTransportIso
                , getVmDownloadProgress
                , getVmReady
+               , getVmProvidesDefaultDiskBackend
                , getVmProvidesDefaultNetworkBackend
                , getVmVkbd
                , getVmVfb
@@ -199,9 +201,15 @@ whenVmRunning uuid f = go =<< isRunning uuid
     where go True = f
           go _    = return ()
 
--- iterate over configured devices and plug proper backend domid
 plugBackendDomains :: VmConfig -> Rpc VmConfig
 plugBackendDomains cfg =
+    do cfg_post_net <- plugNetworkBackendDomains cfg
+       cfg_post_disk <- plugDiskBackendDomains cfg_post_net
+       return cfg_post_disk
+
+-- iterate over configured devices and plug proper backend domid
+plugNetworkBackendDomains :: VmConfig -> Rpc VmConfig
+plugNetworkBackendDomains cfg =
     do plugged <- mapM plugNic (vmcfgNics cfg)
        return $ cfg { vmcfgNics = plugged }
   where
@@ -215,6 +223,19 @@ plugBackendDomains cfg =
             domid <- getDomainID uuid
             return $ nic { nicdefBackendDomid = domid }
 
+plugDiskBackendDomains :: VmConfig -> Rpc VmConfig
+plugDiskBackendDomains cfg =
+    do plugged <- mapM (plugDisk (vmcfgUuid cfg)) (vmcfgDisks cfg)
+       return $ cfg { vmcfgDisks = plugged }
+  where
+    plugDisk :: Uuid -> Disk -> Rpc Disk
+    plugDisk uuid disk = backendFromUuid disk =<< getVmDiskBackendUuid uuid disk
+        where
+          backendFromUuid disk Nothing = return disk
+          backendFromUuid disk (Just uuid) = do
+            domid <- getDomainID uuid
+            return $ disk { diskBackendDomid = domid }
+
 getMaxVgpus :: Rpc Int
 getMaxVgpus = vgpu <$> querySurfmanVgpuMode
     where vgpu Nothing  = 0
@@ -336,7 +357,11 @@ getVmStartupDisks uuid = do
            , diskSnapshotMode = Nothing
            , diskSha1Sum = Nothing
            , diskShared = False
-           , diskManagedType = UnmanagedDisk }
+           , diskManagedType = UnmanagedDisk
+           , diskBackendName = Nothing
+           , diskBackendUuid = Nothing
+           , diskBackendDomid = Nothing
+           }
       
 getVms :: (MonadRpc e m) => m [Uuid]
 getVms = correctVms
@@ -449,12 +474,14 @@ getFullDependencyGraph =
     where
       edge uuid =
           do nics <- getVmNicDefs' uuid
+             disks <- M.elems <$> getDisks uuid
              net_backends <- nub . catMaybes <$> mapM getVmNicBackendUuid nics
-             return $ map (\dep -> (uuid,dep)) net_backends
+             disk_backends <- nub . catMaybes <$> mapM (getVmDiskBackendUuid uuid) disks
+             return $ map (\dep -> (uuid,dep)) (net_backends ++ disk_backends)
 
 getVmDependencies :: Uuid -> Rpc [Uuid]
 getVmDependencies uuid =
-    do graph <- getDependencyGraph
+    do graph <- getFullDependencyGraph
        case dependencies uuid graph of
          Nothing -> error "errors in dependency graph; check for cycles"
          Just xs -> return xs
@@ -1019,6 +1046,8 @@ getVmSmbiosPt uuid = readConfigPropertyDef uuid vmSmbiosPt False
 getVmDescription uuid = readConfigPropertyDef uuid vmDescription ""
 getVmStartOnBootPriority uuid = readConfigPropertyDef uuid vmStartOnBootPriority (0::Int)
 getVmKeepAlive uuid = readConfigPropertyDef uuid vmKeepAlive False
+getVmProvidesDiskBackend uuid = readConfigPropertyDef uuid vmProvidesDiskBackend False
+getVmProvidesDefaultDiskBackend uuid = readConfigPropertyDef uuid vmProvidesDefaultDiskBackend False
 getVmProvidesNetworkBackend uuid = readConfigPropertyDef uuid vmProvidesNetworkBackend False
 getVmProvidesDefaultNetworkBackend uuid = readConfigPropertyDef uuid vmProvidesDefaultNetworkBackend False
 getVmMeasured uuid = readConfigPropertyDef uuid vmMeasured False
diff --git a/xenmgr/XenMgr/Expose/VmDiskObject.hs b/xenmgr/XenMgr/Expose/VmDiskObject.hs
index 2ccd55c..fcc7b13 100644
--- a/xenmgr/XenMgr/Expose/VmDiskObject.hs
+++ b/xenmgr/XenMgr/Expose/VmDiskObject.hs
@@ -118,19 +118,19 @@ _Delete (ID vm_uuid disk_id) =
        liftRpc $ unexpose vm_uuid disk_id
 
 _GetBackendUuid :: ID -> Rpc String
-_GetBackendUuid _ = return ""
+_GetBackendUuid id = fromMaybe "" . fmap show  <$> _get_field id diskBackendUuid
 
 _SetBackendUuid :: ID -> String -> Vm ()
-
 _SetBackendUuid id uuid = _modify_disk id $ \d -> d { diskBackendUuid = case uuid of
                                                                            "" -> Nothing
                                                                            _  -> Just (fromString uuid) }
 _GetBackendName :: ID -> Rpc String
-_GetBackendName _ = return ""
+_GetBackendName id = fromMaybe "" . fmap show  <$> _get_field id diskBackendName
 
 _SetBackendName :: ID -> String -> Vm ()
-_SetBackendName _ _ =
-    error "not implemented"
+_SetBackendName id bname = _modify_disk id $ \d -> d { diskBackendName = case bname of
+                                                                           "" -> Nothing
+                                                                           _  -> Just bname }
 
 _GetPhysPath :: ID -> Rpc (String)
 _GetPhysPath id = _get_field id diskPath
diff --git a/xenmgr/XenMgr/Expose/VmObject.hs b/xenmgr/XenMgr/Expose/VmObject.hs
index 681dcc3..f0615fa 100644
--- a/xenmgr/XenMgr/Expose/VmObject.hs
+++ b/xenmgr/XenMgr/Expose/VmObject.hs
@@ -237,6 +237,9 @@ implementationFor xm uuid = self where
   , comCitrixXenclientXenmgrVmUnrestrictedSetKeepAlive = setVmKeepAlive uuid
   , comCitrixXenclientXenmgrVmUnrestrictedGetProvidesNetworkBackend = getVmProvidesNetworkBackend uuid
   , comCitrixXenclientXenmgrVmUnrestrictedSetProvidesNetworkBackend = setVmProvidesNetworkBackend uuid
+  , comCitrixXenclientXenmgrVmUnrestrictedGetProvidesDiskBackend = getVmProvidesDiskBackend uuid
+  , comCitrixXenclientXenmgrVmUnrestrictedSetProvidesDiskBackend = setVmProvidesDiskBackend uuid
+  
   , comCitrixXenclientXenmgrVmUnrestrictedGetMeasured = getVmMeasured uuid
   , comCitrixXenclientXenmgrVmUnrestrictedGetProvidesGraphicsFallback = getVmProvidesGraphicsFallback uuid
   , comCitrixXenclientXenmgrVmUnrestrictedSetProvidesGraphicsFallback = \v -> setVmProvidesGraphicsFallback uuid v
@@ -438,6 +441,8 @@ implementationFor xm uuid = self where
   , comCitrixXenclientXenmgrVmSetKeepAlive = \v -> restrict >> setVmKeepAlive uuid v
   , comCitrixXenclientXenmgrVmGetProvidesNetworkBackend = getVmProvidesNetworkBackend uuid
   , comCitrixXenclientXenmgrVmSetProvidesNetworkBackend = \v -> restrict >> setVmProvidesNetworkBackend uuid v
+  , comCitrixXenclientXenmgrVmGetProvidesDiskBackend = getVmProvidesDiskBackend uuid
+  , comCitrixXenclientXenmgrVmSetProvidesDiskBackend = \v -> restrict >> setVmProvidesDiskBackend uuid v
   , comCitrixXenclientXenmgrVmGetExtraXenvm = getVmExtraXenvm uuid
   , comCitrixXenclientXenmgrVmSetExtraXenvm = \v -> restrict >> setVmExtraXenvm uuid v
   , comCitrixXenclientXenmgrVmGetExtraHvm = getVmExtraHvm uuid
@@ -586,6 +591,11 @@ implementationFor xm uuid = self where
   , comCitrixXenclientXenmgrVmSetDownloadProgress = restrict' $ (setVmDownloadProgress uuid . fromIntegral)
   , comCitrixXenclientXenmgrVmUnrestrictedSetDownloadProgress = setVmDownloadProgress uuid . fromIntegral
 
+  , comCitrixXenclientXenmgrVmGetProvidesDefaultDiskBackend = getVmProvidesDefaultDiskBackend uuid
+  , comCitrixXenclientXenmgrVmUnrestrictedGetProvidesDefaultDiskBackend = getVmProvidesDefaultDiskBackend uuid
+  , comCitrixXenclientXenmgrVmSetProvidesDefaultDiskBackend = restrict' $ setVmProvidesDefaultDiskBackend uuid
+  , comCitrixXenclientXenmgrVmUnrestrictedSetProvidesDefaultDiskBackend = setVmProvidesDefaultDiskBackend uuid
+
   , comCitrixXenclientXenmgrVmGetProvidesDefaultNetworkBackend = getVmProvidesDefaultNetworkBackend uuid
   , comCitrixXenclientXenmgrVmUnrestrictedGetProvidesDefaultNetworkBackend = getVmProvidesDefaultNetworkBackend uuid
   , comCitrixXenclientXenmgrVmSetProvidesDefaultNetworkBackend = restrict' $ setVmProvidesDefaultNetworkBackend uuid
-- 
2.7.4

